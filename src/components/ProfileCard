import React, { useState } from 'react';
import { 
  Card, 
  Button, 
  Dialog, 
  DialogContent, 
  DialogHeader, 
  DialogTitle, 
  DialogDescription,
  DialogFooter,
  Spinner
} from '@/components/ui'; // Adjust import based on your UI library

// Profile Card Component
export const ProfileCard = ({ profile }) => {
  const [showModal, setShowModal] = useState(false);
  const [enrichedData, setEnrichedData] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  
  const handleCardClick = async () => {
    setShowModal(true);
    
    if (!enrichedData && !loading) {
      setLoading(true);
      setError(null);
      
      try {
        const response = await fetch('/api/enrich-profile', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            profileUrl: profile.profile_url
          })
        });
        
        if (!response.ok) {
          throw new Error('Failed to enrich profile');
        }
        
        const data = await response.json();
        setEnrichedData(data.data || null);
      } catch (err) {
        console.error('Error enriching profile:', err);
        setError(err.message || 'Error retrieving contact information');
      } finally {
        setLoading(false);
      }
    }
  };
  
  return (
    <>
      <Card 
        className="cursor-pointer hover:shadow-md transition-shadow p-4 mb-4"
        onClick={handleCardClick}
      >
        <h3 className="text-lg font-medium text-blue-600">{profile.profile_name}</h3>
        <p className="text-sm font-medium text-green-600">{profile.profile_title}</p>
        <p className="text-sm text-gray-600">{profile.profile_location}</p>
        <div className="flex justify-between items-center mt-2">
          <a 
            href={profile.profile_url.startsWith('http') ? profile.profile_url : `https://${profile.profile_url}`}
            target="_blank" 
            rel="noopener noreferrer"
            className="text-sm text-blue-500 hover:underline"
            onClick={(e) => e.stopPropagation()}
          >
            View on LinkedIn
          </a>
          <span className="text-sm bg-blue-100 text-blue-800 px-2 py-1 rounded-full">
            Score: {profile.relevance_score}
          </span>
        </div>
      </Card>
      
      <ContactInfoModal
        isOpen={showModal}
        onClose={() => setShowModal(false)}
        profile={profile}
        enrichedData={enrichedData}
        isLoading={loading}
        error={error}
      />
    </>
  );
};

// Contact Info Modal Component
const ContactInfoModal = ({ isOpen, onClose, profile, enrichedData, isLoading, error }) => {
  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="sm:max-w-md">
        <DialogHeader>
          <DialogTitle>{profile.profile_name}</DialogTitle>
          <DialogDescription>
            {profile.profile_title} â€¢ {profile.profile_location}
          </DialogDescription>
        </DialogHeader>
        
        <div className="py-4">
          {isLoading ? (
            <div className="flex justify-center items-center py-8">
              <Spinner className="h-8 w-8 text-blue-500" />
              <span className="ml-2 text-gray-600">Retrieving contact information...</span>
            </div>
          ) : error ? (
            <div className="bg-red-50 text-red-700 p-4 rounded-md">
              <p>Unable to retrieve contact information: {error}</p>
            </div>
          ) : enrichedData ? (
            <div className="space-y-4">
              <section>
                <h3 className="font-medium text-gray-900 mb-2">Contact Information</h3>
                <div className="space-y-2">
                  {enrichedData.work_email && (
                    <div className="flex items-start">
                      <span className="text-gray-500 w-24">Work Email:</span>
                      <a href={`mailto:${enrichedData.work_email}`} className="text-blue-600 hover:underline">
                        {enrichedData.work_email}
                      </a>
                    </div>
                  )}
                  
                  {enrichedData.personal_emails && enrichedData.personal_emails.length > 0 && (
                    <div className="flex items-start">
                      <span className="text-gray-500 w-24">Personal:</span>
                      <div className="flex flex-col">
                        {enrichedData.personal_emails.map((email, i) => (
                          <a key={i} href={`mailto:${email}`} className="text-blue-600 hover:underline">
                            {email}
                          </a>
                        ))}
                      </div>
                    </div>
                  )}
                  
                  {enrichedData.mobile_phone && (
                    <div className="flex items-start">
                      <span className="text-gray-500 w-24">Phone:</span>
                      <a href={`tel:${enrichedData.mobile_phone}`} className="text-blue-600 hover:underline">
                        {enrichedData.mobile_phone}
                      </a>
                    </div>
                  )}
                </div>
              </section>
              
              <section>
                <h3 className="font-medium text-gray-900 mb-2">Professional Information</h3>
                <div className="space-y-2">
                  {enrichedData.job_company_name && (
                    <div className="flex items-start">
                      <span className="text-gray-500 w-24">Company:</span>
                      <span>{enrichedData.job_company_name}</span>
                    </div>
                  )}
                  
                  {enrichedData.industry && (
                    <div className="flex items-start">
                      <span className="text-gray-500 w-24">Industry:</span>
                      <span>{enrichedData.industry}</span>
                    </div>
                  )}
                  
                  {enrichedData.job_title && (
                    <div className="flex items-start">
                      <span className="text-gray-500 w-24">Title:</span>
                      <span>{enrichedData.job_title}</span>
                    </div>
                  )}
                </div>
              </section>
              
              {enrichedData.skills && enrichedData.skills.length > 0 && (
                <section>
                  <h3 className="font-medium text-gray-900 mb-2">Skills</h3>
                  <div className="flex flex-wrap gap-1">
                    {enrichedData.skills.map((skill, i) => (
                      <span key={i} className="bg-gray-100 px-2 py-1 rounded text-sm">
                        {skill}
                      </span>
                    ))}
                  </div>
                </section>
              )}
              
              <section>
                <h3 className="font-medium text-gray-900 mb-2">Social Profiles</h3>
                <div className="space-y-2">
                  {enrichedData.profiles && enrichedData.profiles.map((profile, i) => (
                    <div key={i} className="flex items-start">
                      <span className="text-gray-500 w-24 capitalize">{profile.network}:</span>
                      <a 
                        href={profile.url.startsWith('http') ? profile.url : `https://${profile.url}`}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="text-blue-600 hover:underline"
                      >
                        {profile.username}
                      </a>
                    </div>
                  ))}
                </div>
              </section>
            </div>
          ) : (
            <div className="bg-yellow-50 text-yellow-700 p-4 rounded-md">
              <p>Click "Get Contact Info" to retrieve this person's contact details.</p>
            </div>
          )}
        </div>
        
        <DialogFooter className="flex justify-between items-center">
          {!enrichedData && !isLoading && (
            <Button 
              onClick={() => handleCardClick()} 
              disabled={isLoading}
              className="bg-blue-600 hover:bg-blue-700 text-white"
            >
              {isLoading ? 'Loading...' : 'Get Contact Info'}
            </Button>
          )}
          <Button variant="outline" onClick={onClose}>
            Close
          </Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
};

// Profiles List Component
export const ProfilesList = ({ profiles }) => {
  return (
    <div className="space-y-4">
      {profiles.map((profile, index) => (
        <ProfileCard key={index} profile={profile} />
      ))}
    </div>
  );
};
